package main

import (
	"fmt"
)

templ layout(contents templ.Component) {
	<!DOCTYPE html>
	<html lang="">
		<head>
			<title>Contact App</title>
			<link rel="stylesheet" href="https://the.missing.style/v0.2.0/missing.min.css"/>
			<link rel="stylesheet" href="/static/site.css"/>
			<script src="/static/js/htmx-1.8.0.js"></script>
			<script src="/static/js/_hyperscript-0.9.7.js"></script>
			<script src="/static/js/rsjs-menu.js" type="module"></script>
			<script defer src="https://unpkg.com/alpinejs@3/dist/cdn.min.js"></script>
			<script src="https://unpkg.com/htmx.org@1.9.2" integrity="sha384-L6OqL9pRWyyFU3+/bjdSri+iIphTN/bvYyM37tICVyOJkWZLpP2vGn6VUEXgzg6h" crossorigin="anonymous"></script>
		</head>
		<body hx-boost="true">
			<main>
				<header>
					<h1>
						<all-caps>contacts.app</all-caps>
						<sub-title>A Demo Contacts Application</sub-title>
					</h1>
				</header>
				<!--
        for _, message := range get_flashed_messages() {
          <div class="flash">{ message }</div>
        }
        -->
				@contents
			</main>
		</body>
	</html>
}

templ rowsTpl(contacts []Contact) {
	for _, contact := range contacts {
		<tr>
			<td>{ contact.First }</td>
			<td>{ contact.Last }</td>
			<td>{ contact.Phone }</td>
			<td>{ contact.Email }</td>
			<td>
				<a href={ templ.SafeURL(fmt.Sprintf("/contacts/%d/edit", contact.ID)) }>Edit</a>
				<a href={ templ.SafeURL(fmt.Sprintf("/contacts/%d", contact.ID)) }>View</a>
				<a
					href="#"
					hx-delete={ string(templ.SafeURL(fmt.Sprintf("/contacts/%d", contact.ID))) }
					hx-confirm="Are you sure you want to delete this contact?"
					hx-target="closest tr"
				>
					Delete
				</a>
			</td>
		</tr>
	}
}

templ indexTplInner(q string, page int64, contacts []Contact) {
	<form action="/contacts" method="get" class="tool-bar">
		<label for="search">Search Term</label>
		<input
			id="search"
			type="search"
			name="q"
			value={ q }
			hx-get="/contacts"
			hx-trigger="search, keyup delay:200ms changed"
			hx-target="tbody"
			hx-select="tbody tr"
			hx-push-url="true"
			hx-indicator="#spinner"
		/>
		<img id="spinner" class="htmx-indicator" src="/static/img/spinning-circles.svg" alt="Request In Flight..."/>
		<input type="submit" value="Search"/>
	</form>
	<table>
		<thead>
			<tr>
				<th>First</th>
				<th>Last</th>
				<th>Phone</th>
				<th>Email</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@rowsTpl(contacts)
		</tbody>
	</table>
	<div>
		<span style="float: right">
			if page > 1 {
				<a href={ templ.SafeURL(fmt.Sprintf("/contacts?page=%d", page-1)) }>Previous</a>
			}
			if len(contacts) == 10 {
				<a href={ templ.SafeURL(fmt.Sprintf("/contacts?page=%d", page+1)) }>Next</a>
			}
		</span>
	</div>
	<p>
		<a href="/contacts/new">Add Contact</a>
		<span hx-get="/contacts/count" hx-trigger="revealed">
			<img id="spinner" class="htmx-indicator" src="/static/img/spinning-circles.svg"/>
		</span>
	</p>
}

templ indexTpl(q string, page int64, contacts []Contact) {
	@layout(indexTplInner(q, page, contacts))
}

templ contactsNewTpl(contact *Contact) {
	@layout(contactsNewTplInner(contact))
}

templ contactsNewTplInner(contact *Contact) {
	<form action="/contacts/new" method="post">
		<fieldset>
			<legend>Contact Values</legend>
			<p>
				<label for="email">Email</label>
				<input
					name="email"
					id="email"
					type="email"
					hx-get={ string(templ.SafeURL(fmt.Sprintf("/contacts/%d/email", contact.ID))) }
					hx-target="next .error"
					hx-trigger="change, keyup delay:200ms changed"
					placeholder="Email"
					value={ contact.Email }
				/>
				<span class="error">{ contact.errors["email"] }</span>
			</p>
			<p>
				<label for="first_name">First Name</label>
				<input name="first_name" id="first_name" type="text" placeholder="First Name" value={ contact.First }/>
				<span class="error">{ contact.errors["first"] }</span>
			</p>
			<p>
				<label for="last_name">Last Name</label>
				<input name="last_name" id="last_name" type="text" placeholder="Last Name" value={ contact.Last }/>
				<span class="error">{ contact.errors["last"] }</span>
			</p>
			<p>
				<label for="phone">Phone</label>
				<input name="phone" id="phone" type="text" placeholder="Phone" value={ contact.Phone }/>
				<span class="error">{ contact.errors["phone"] }</span>
			</p>
			<button>Save</button>
		</fieldset>
	</form>
	<p>
		<a href="/contacts">Back</a>
	</p>
}

templ contactsViewTpl(contact *Contact) {
	@layout(contactsViewTplInner(contact))
}

templ contactsViewTplInner(contact *Contact) {
	<h1>{ contact.First } { contact.Last }</h1>
	<div>
		<div>Phone: { contact.Phone }</div>
		<div>Email: { contact.Email }</div>
	</div>
	<p>
		<a href={ templ.SafeURL(fmt.Sprintf("/contacts/%d/edit", contact.ID)) }>Edit</a>
		<a href="/contacts">Back</a>
	</p>
}

templ contactsEditTpl(contact *Contact) {
	@layout(contactsEditTplInner(contact))
}

templ contactsEditTplInner(contact *Contact) {
	<form action={ templ.SafeURL(fmt.Sprintf("/contacts/%d/edit", contact.ID)) } method="post">
		<fieldset>
			<legend>Contact Values</legend>
			<p>
				<label for="email">Email</label>
				<input
					name="email"
					id="email"
					type="email"
					hx-get={ string(templ.SafeURL(fmt.Sprintf("/contacts/%d/email", contact.ID))) }
					hx-target="next .error"
					hx-trigger="change, keyup delay:200ms changed"
					placeholder="Email"
					value={ contact.Email }
				/>
				<span class="error">{ contact.errors["email"] }</span>
			</p>
			<p>
				<label for="first_name">First Name</label>
				<input
					name="first_name"
					id="first_name"
					type="text"
					placeholder="First Name"
					value={ contact.First }
				/>
				<span class="error">{ contact.errors["first"] }</span>
			</p>
			<p>
				<label for="last_name">Last Name</label>
				<input
					name="last_name"
					id="last_name"
					type="text"
					placeholder="Last Name"
					value={ contact.Last }
				/>
				<span class="error">{ contact.errors["last"] }</span>
			</p>
			<p>
				<label for="phone">Phone</label>
				<input
					name="phone"
					id="phone"
					type="text"
					placeholder="Phone"
					value={ contact.Phone }
				/>
				<span class="error">{ contact.errors["phone"] }</span>
			</p>
			<button>Save</button>
		</fieldset>
	</form>
	<button
        id="delete-btn"
		hx-delete={ string(templ.SafeURL(fmt.Sprintf("/contacts/%d", contact.ID))) }
		hx-push-url="true"
		hx-confirm={ fmt.Sprintf("Delete contact %s?", contact.Email) }
		hx-target="body"
	>
		Delete Contact
	</button>
	<p>
		<a href="/contacts">Back</a>
	</p>
}
